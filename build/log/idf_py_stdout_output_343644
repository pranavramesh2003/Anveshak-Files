[1/11] Performing build step for 'bootloader'
[1/1] cd /home/pranav/esp-idf-mpu6050-dmp/MPU6050_DMP6/build/bootloader/esp-idf/esptool_py && /home/pranav/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/pranav/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/pranav/esp-idf-mpu6050-dmp/MPU6050_DMP6/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
[3/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/mpu6050.cpp.obj
../main/mpu6050.cpp: In function 'void mpu6050(void*)':
../main/mpu6050.cpp:177:31: warning: unused variable '_roll' [-Wunused-variable]
  177 |                         float _roll = ypr[2] * RAD_TO_DEG;
      |                               ^~~~~
../main/mpu6050.cpp:178:31: warning: unused variable '_pitch' [-Wunused-variable]
  178 |                         float _pitch = ypr[1] * RAD_TO_DEG;
      |                               ^~~~~~
../main/mpu6050.cpp:179:31: warning: unused variable '_yaw' [-Wunused-variable]
  179 |                         float _yaw = ypr[0] * RAD_TO_DEG;
      |                               ^~~~
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable MPU6050_DMP6.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/pranav/esp-idf-mpu6050-dmp/MPU6050_DMP6/build/MPU6050_DMP6.bin
[8/9] cd /home/pranav/esp-idf-mpu6050-dmp/MPU6050_DMP6/build/esp-idf/esptool_py && /home/pranav/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/pranav/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/pranav/esp-idf-mpu6050-dmp/MPU6050_DMP6/build/partition_table/partition-table.bin /home/pranav/esp-idf-mpu6050-dmp/MPU6050_DMP6/build/MPU6050_DMP6.bin
MPU6050_DMP6.bin binary size 0x327a0 bytes. Smallest app partition is 0x100000 bytes. 0xcd860 bytes (80%) free.
[8/9] cd /home/pranav/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/pranav/esp/esp-idf -D "SERIAL_TOOL=/home/pranav/.espressif/python_env/idf5.1_py3.8_env/bin/python;;/home/pranav/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/pranav/esp-idf-mpu6050-dmp/MPU6050_DMP6/build -P /home/pranav/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 MPU6050_DMP6.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev1
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b0:a7:32:de:e5:08
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00042fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16669...
Writing at 0x00001000... (50 %)
Writing at 0x0000769b... (100 %)
Wrote 26640 bytes (16669 compressed) at 0x00001000 in 0.5 seconds (effective 398.1 kbit/s)...
Hash of data verified.
Compressed 206752 bytes to 115149...
Writing at 0x00010000... (12 %)
Writing at 0x0001bd74... (25 %)
Writing at 0x00022aee... (37 %)
Writing at 0x00028a96... (50 %)
Writing at 0x0002e734... (62 %)
Writing at 0x00036b95... (75 %)
Writing at 0x0003c62a... (87 %)
Writing at 0x00042525... (100 %)
Wrote 206752 bytes (115149 compressed) at 0x00010000 in 2.8 seconds (effective 600.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 1229.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
